{"version":3,"sources":["../../../api/users/user.controller.js"],"names":["data","create","req","res","next","user","body","email","password","sendStatus","findByEmail","then","existingUser","send","error","name","catch","err","update","id","params","options","updateUser","getProfile","getById","getAll","users","map","u","delete","toggleAdmin","makeAdmin","console","log"],"mappings":"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","file":"user.controller.js","sourcesContent":["export default (data) => {\n    return {\n      create: (req, res, next) => {\n        const user = req.body;\n  \n        if (!user || !user.email || !user.password) {\n          return res\n            .sendStatus(400);\n        }\n  \n        data.findByEmail(user.email)\n          .then((existingUser) => {\n            if (existingUser) {\n              return res\n                .sendStatus(400)\n                .send({\n                  error: 'User already exists'\n                });\n            }\n  \n            return data.create(user);\n          })\n          .then(() => {\n            return res\n              .send({\n                email: user.email,\n                name: user.name\n              })\n          })\n          .catch(err => next(err));\n      },\n      update: (req, res, next) => {\n        const id = req.params.id,\n          options = req.body;\n  \n        data.updateUser(id, options)\n          .then(user => {\n            if (!user) {\n              return res.sendStatus(404);\n            }\n  \n            return res.send(user);\n          })\n          .catch(err => {\n            res.send(err)\n          });\n      },\n      getProfile: (req, res, next) => {\n        const id = req.params.id;\n  \n        data\n          .getById(id)\n          .then(user => {\n            if (!user) {\n              return res.sendStatus(404);\n            }\n  \n            return res.send(user);\n          });\n      },\n      getAll: (req, res) => {\n        data\n          .getAll()\n          .then(users => {\n            users = users.map(u => {\n              u.password = null;\n              return u;\n            });\n  \n            return res.send(users);\n          });\n      },\n      delete: (req, res) => {\n        const id = req.params.id;\n  \n        data.delete(id)\n          .then(() => {\n            res.sendStatus(204);\n          });\n      },\n      toggleAdmin: (req, res) => {\n        const id = req.params.id;\n        const makeAdmin = req.body.makeAdmin;\n  \n        data.toggleAdmin(id, makeAdmin)\n          .then((user) => {\n            res.send(user);\n          })\n          .catch(err => console.log);\n      }\n    }\n  }"]}