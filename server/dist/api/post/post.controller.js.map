{"version":3,"sources":["../../../api/post/post.controller.js"],"names":["data","create","req","res","next","post","body","title","sendStatus","getById","id","then","existingPost","send","error","description","catch","err","update","params","options","updatePost","getOne","getAll","posts","map","u","delete","toggleAdmin","makeAdmin","console","log"],"mappings":";;;;;;kBAAe,UAACA,IAAD,EAAU;AACrB,SAAO;AACLC,YAAQ,gBAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC1B,UAAMC,OAAOH,IAAII,IAAjB;;AAEA,UAAI,CAACD,IAAD,IAAS,CAACA,KAAKE,KAAnB,EAA0B;AACxB,eAAOJ,IACJK,UADI,CACO,GADP,CAAP;AAED;;AAEDR,WAAKS,OAAL,CAAaJ,KAAKK,EAAlB,EACGC,IADH,CACQ,UAACC,YAAD,EAAkB;AACtB,YAAIA,YAAJ,EAAkB;AAChB,iBAAOT,IACJK,UADI,CACO,GADP,EAEJK,IAFI,CAEC;AACJC,mBAAO;AADH,WAFD,CAAP;AAKD;;AAED,eAAOd,KAAKC,MAAL,CAAYI,IAAZ,CAAP;AACD,OAXH,EAYGM,IAZH,CAYQ,YAAM;AACV,eAAOR,IACJU,IADI,CACC;AACJN,iBAAOF,KAAKE,KADR;AAEJQ,uBAAaV,KAAKU;AAFd,SADD,CAAP;AAKD,OAlBH,EAmBGC,KAnBH,CAmBS;AAAA,eAAOZ,KAAKa,GAAL,CAAP;AAAA,OAnBT;AAoBD,KA7BI;AA8BLC,YAAQ,gBAAChB,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC1B,UAAMM,KAAKR,IAAIiB,MAAJ,CAAWT,EAAtB;AAAA,UACEU,UAAUlB,IAAII,IADhB;;AAGAN,WAAKqB,UAAL,CAAgBX,EAAhB,EAAoBU,OAApB,EACGT,IADH,CACQ,gBAAQ;AACZ,YAAI,CAACN,IAAL,EAAW;AACT,iBAAOF,IAAIK,UAAJ,CAAe,GAAf,CAAP;AACD;;AAED,eAAOL,IAAIU,IAAJ,CAASR,IAAT,CAAP;AACD,OAPH,EAQGW,KARH,CAQS,eAAO;AACZb,YAAIU,IAAJ,CAASI,GAAT;AACD,OAVH;AAWD,KA7CI;AA8CLK,YAAQ,gBAACpB,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC1B,UAAMM,KAAKR,IAAIiB,MAAJ,CAAWT,EAAtB;;AAEAV,WAAKS,OAAL,CAAaC,EAAb,EACGC,IADH,CACQ,gBAAQ;AACZ,YAAI,CAACN,IAAL,EAAW;AACT,iBAAOF,IAAIK,UAAJ,CAAe,GAAf,CAAP;AACD;;AAED,eAAOL,IAAIU,IAAJ,CAASR,IAAT,CAAP;AACD,OAPH;AAQD,KAzDI;AA0DLkB,YAAQ,gBAACrB,GAAD,EAAMC,GAAN,EAAc;AACpBH,WAAKuB,MAAL,GACGZ,IADH,CACQ,iBAAS;AACba,gBAAQA,MAAMC,GAAN,CAAU,aAAK;AACrB,iBAAOC,CAAP;AACD,SAFO,CAAR;;AAIA,eAAOvB,IAAIU,IAAJ,CAASW,KAAT,CAAP;AACD,OAPH;AAQD,KAnEI;AAoELG,YAAQ,iBAACzB,GAAD,EAAMC,GAAN,EAAc;AACpB,UAAMO,KAAKR,IAAIiB,MAAJ,CAAWT,EAAtB;;AAEAV,WAAK2B,MAAL,CAAYjB,EAAZ,EACGC,IADH,CACQ,YAAM;AACVR,YAAIK,UAAJ,CAAe,GAAf;AACD,OAHH;AAID,KA3EI;AA4ELoB,iBAAa,qBAAC1B,GAAD,EAAMC,GAAN,EAAc;AACzB,UAAMO,KAAKR,IAAIiB,MAAJ,CAAWT,EAAtB;AACA,UAAMmB,YAAY3B,IAAII,IAAJ,CAASuB,SAA3B;;AAEA7B,WAAK4B,WAAL,CAAiBlB,EAAjB,EAAqBmB,SAArB,EACGlB,IADH,CACQ,UAACN,IAAD,EAAU;AACdF,YAAIU,IAAJ,CAASR,IAAT;AACD,OAHH,EAIGW,KAJH,CAIS;AAAA,eAAOc,QAAQC,GAAf;AAAA,OAJT;AAKD;AArFI,GAAP;AAuFD,C","file":"post.controller.js","sourcesContent":["export default (data) => {\n    return {\n      create: (req, res, next) => {\n        const post = req.body;\n  \n        if (!post || !post.title) {\n          return res\n            .sendStatus(400);\n        }\n  \n        data.getById(post.id)\n          .then((existingPost) => {\n            if (existingPost) {\n              return res\n                .sendStatus(400)\n                .send({\n                  error: 'post already exists'\n                });\n            }\n  \n            return data.create(post);\n          })\n          .then(() => {\n            return res\n              .send({\n                title: post.title,\n                description: post.description\n              })\n          })\n          .catch(err => next(err));\n      },\n      update: (req, res, next) => {\n        const id = req.params.id,\n          options = req.body;\n  \n        data.updatePost(id, options)\n          .then(post => {\n            if (!post) {\n              return res.sendStatus(404);\n            }\n  \n            return res.send(post);\n          })\n          .catch(err => {\n            res.send(err)\n          });\n      },\n      getOne: (req, res, next) => {\n        const id = req.params.id;\n  \n        data.getById(id)\n          .then(post => {\n            if (!post) {\n              return res.sendStatus(404);\n            }\n  \n            return res.send(post);\n          });\n      },\n      getAll: (req, res) => {\n        data.getAll()\n          .then(posts => {\n            posts = posts.map(u => {\n              return u;\n            });\n  \n            return res.send(posts);\n          });\n      },\n      delete: (req, res) => {\n        const id = req.params.id;\n  \n        data.delete(id)\n          .then(() => {\n            res.sendStatus(204);\n          });\n      },\n      toggleAdmin: (req, res) => {\n        const id = req.params.id;\n        const makeAdmin = req.body.makeAdmin;\n  \n        data.toggleAdmin(id, makeAdmin)\n          .then((post) => {\n            res.send(post);\n          })\n          .catch(err => console.log);\n      }\n    }\n  }"]}